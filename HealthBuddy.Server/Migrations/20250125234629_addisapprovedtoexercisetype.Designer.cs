// <auto-generated />
using System;
using HealthBuddy.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthBuddy.Server.Migrations
{
    [DbContext(typeof(HealthBuddyDbContext))]
    [Migration("20250125234629_addisapprovedtoexercisetype")]
    partial class addisapprovedtoexercisetype
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExerciseExerciseType", b =>
                {
                    b.Property<int>("ExerciseId")
                        .HasColumnType("int")
                        .HasColumnName("ExerciseID");

                    b.Property<int>("ExerciseTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ExerciseTypeID");

                    b.HasKey("ExerciseId", "ExerciseTypeId")
                        .HasName("PK__Exercise__C6BF56028FDA59DD");

                    b.HasIndex("ExerciseTypeId");

                    b.ToTable("Exercise_ExerciseType", (string)null);
                });

            modelBuilder.Entity("ExerciseMuscleType", b =>
                {
                    b.Property<int>("ExerciseId")
                        .HasColumnType("int")
                        .HasColumnName("ExerciseID");

                    b.Property<int>("MuscleTypeId")
                        .HasColumnType("int")
                        .HasColumnName("MuscleTypeID");

                    b.HasKey("ExerciseId", "MuscleTypeId")
                        .HasName("PK__Exercise__D58AEA2F333AFC17");

                    b.HasIndex("MuscleTypeId");

                    b.ToTable("Exercise_MuscleType", (string)null);
                });

            modelBuilder.Entity("FoodFoodType", b =>
                {
                    b.Property<int>("FoodId")
                        .HasColumnType("int")
                        .HasColumnName("FoodID");

                    b.Property<int>("FoodTypeId")
                        .HasColumnType("int")
                        .HasColumnName("FoodTypeID");

                    b.HasKey("FoodId", "FoodTypeId")
                        .HasName("PK__Food_Foo__5850A68DCD8C18B3");

                    b.HasIndex("FoodTypeId");

                    b.ToTable("Food_FoodTypes", (string)null);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CommentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TargetId")
                        .HasColumnType("int")
                        .HasColumnName("TargetID");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CommentId")
                        .HasName("PK__Comments__C3B4DFAA79667157");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExerciseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<int?>("CaloriesBurned")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifficultyLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfComments")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLikes")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfReps")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfSets")
                        .HasColumnType("int");

                    b.Property<int?>("TimeBetweenSet")
                        .HasColumnType("int");

                    b.Property<int>("UploaderId")
                        .HasColumnType("int")
                        .HasColumnName("UploaderID");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId")
                        .HasName("PK__Exercise__A074AD0F63BA07DB");

                    b.HasIndex("UploaderId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.ExerciseType", b =>
                {
                    b.Property<int>("ExerciseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExerciseTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseTypeId"));

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.HasKey("ExerciseTypeId")
                        .HasName("PK__Exercise__6CBFB0D7781E5789");

                    b.ToTable("ExerciseType", (string)null);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FoodID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("CookingTime")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DifficultyLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HealthBenefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfComments")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLikes")
                        .HasColumnType("int");

                    b.Property<int>("Portion")
                        .HasColumnType("int");

                    b.Property<int>("UploaderId")
                        .HasColumnType("int")
                        .HasColumnName("UploaderID");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodId")
                        .HasName("PK__Food__856DB3CBA629DDDD");

                    b.HasIndex("UploaderId");

                    b.ToTable("Food", (string)null);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.FoodType", b =>
                {
                    b.Property<int>("FoodTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FoodTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodTypeId"));

                    b.Property<string>("FoodTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.HasKey("FoodTypeId")
                        .HasName("PK__FoodType__D3D1546C6E1FD183");

                    b.ToTable("FoodTypes");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IngredientID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("MeasurementUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IngredientId")
                        .HasName("PK__Ingredie__BEAEB27AFA785F1B");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Like", b =>
                {
                    b.Property<int>("LikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LikeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LikeId"));

                    b.Property<int>("TargetId")
                        .HasColumnType("int")
                        .HasColumnName("TargetID");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("LikeId")
                        .HasName("PK__Likes__A2922CF4A3D8DD64");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.MealDetail", b =>
                {
                    b.Property<int>("MealDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MealDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealDetailId"));

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<int>("FoodId")
                        .HasColumnType("int")
                        .HasColumnName("FoodID");

                    b.Property<int>("MealScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("MealScheduleID");

                    b.Property<string>("MealTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MealDetailId")
                        .HasName("PK__MealDeta__425974B34382DB9F");

                    b.HasIndex("FoodId");

                    b.HasIndex("MealScheduleId");

                    b.ToTable("MealDetails");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.MealSchedule", b =>
                {
                    b.Property<int>("MealScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MealScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealScheduleId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<string>("MealName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UploaderId")
                        .HasColumnType("int")
                        .HasColumnName("UploaderID");

                    b.HasKey("MealScheduleId")
                        .HasName("PK__MealSche__404D879CE6759FA2");

                    b.HasIndex("UploaderId");

                    b.ToTable("MealSchedules");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.MuscleType", b =>
                {
                    b.Property<int>("MuscleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MuscleTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MuscleTypeId"));

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("MuscleTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MuscleTypeId")
                        .HasName("PK__MuscleTy__5FE4720658395BAD");

                    b.ToTable("MuscleType", (string)null);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Recipe", b =>
                {
                    b.Property<int>("FoodId")
                        .HasColumnType("int")
                        .HasColumnName("FoodID");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int")
                        .HasColumnName("IngredientID");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("FoodId", "IngredientId")
                        .HasName("PK__Recipes__3E8758EC2D4EA7B9");

                    b.HasIndex("IngredientId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetId")
                        .HasColumnType("int")
                        .HasColumnName("TargetID");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReportId")
                        .HasName("PK__Report__D5BD48E568154372");

                    b.HasIndex("UserId");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeactivated")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC3BEDEC93");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534170D1B2A")
                        .IsUnique();

                    b.ToTable("Users", t =>
                        {
                            t.HasTrigger("trg_AfterInsert_Users");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserDetail", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("Allergies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("UserId")
                        .HasName("PK__UserDeta__1788CCAC000BC5FD");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserMealSchedule", b =>
                {
                    b.Property<int>("UserMealScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserMealScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserMealScheduleId"));

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("MealScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("MealScheduleID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserMealScheduleId")
                        .HasName("PK__UserMeal__D784CE54AA32CC16");

                    b.HasIndex("MealScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMealSchedule", (string)null);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserMealTracking", b =>
                {
                    b.Property<int>("UserMealTrackingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserMealTrackingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserMealTrackingId"));

                    b.Property<int>("MealScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("MealScheduleID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TrackingDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserMealTrackingId")
                        .HasName("PK__UserMeal__8B54A089AD242534");

                    b.HasIndex("MealScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMealTracking", (string)null);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserNotificationPreference", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<bool>("ExerciseNoti")
                        .HasColumnType("bit");

                    b.Property<bool>("FoodNoti")
                        .HasColumnType("bit");

                    b.Property<bool>("MealScheduleNoti")
                        .HasColumnType("bit");

                    b.Property<bool>("WorkoutScheduleNoti")
                        .HasColumnType("bit");

                    b.HasKey("UserId")
                        .HasName("PK__UserNoti__1788CCAC52489948");

                    b.ToTable("UserNotificationPreferences");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserWorkoutSchedule", b =>
                {
                    b.Property<int>("UserWorkoutScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserWorkoutScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserWorkoutScheduleId"));

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("WorkoutScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("WorkoutScheduleID");

                    b.HasKey("UserWorkoutScheduleId")
                        .HasName("PK__UserWork__3DA6DF0DD7CEB540");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutScheduleId");

                    b.ToTable("UserWorkoutSchedule", (string)null);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserWorkoutTracking", b =>
                {
                    b.Property<int>("UserWorkoutTrackingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserWorkoutTrackingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserWorkoutTrackingId"));

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TrackingDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("WorkoutScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("WorkoutScheduleID");

                    b.HasKey("UserWorkoutTrackingId")
                        .HasName("PK__UserWork__311D8EB3421F1AC5");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutScheduleId");

                    b.ToTable("UserWorkoutTracking", (string)null);
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.WorkoutDetail", b =>
                {
                    b.Property<int>("WorkoutDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkoutDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutDetailId"));

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int")
                        .HasColumnName("ExerciseID");

                    b.Property<int>("WorkoutScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("WorkoutScheduleID");

                    b.HasKey("WorkoutDetailId")
                        .HasName("PK__WorkoutD__F3D39920B11CC002");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutScheduleId");

                    b.ToTable("WorkoutDetails");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.WorkoutSchedule", b =>
                {
                    b.Property<int>("WorkoutScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WorkoutScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutScheduleId"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfComments")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLikes")
                        .HasColumnType("int");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UploaderId")
                        .HasColumnType("int")
                        .HasColumnName("UploaderID");

                    b.Property<string>("WorkOutName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("WorkoutScheduleId")
                        .HasName("PK__WorkoutS__5C5C8FF2B2A5440C");

                    b.HasIndex("UploaderId");

                    b.ToTable("WorkoutSchedules");
                });

            modelBuilder.Entity("ExerciseExerciseType", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.Exercise", null)
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .IsRequired()
                        .HasConstraintName("FK__Exercise___Exerc__5FB337D6");

                    b.HasOne("HealthBuddy.Server.Models.Domain.ExerciseType", null)
                        .WithMany()
                        .HasForeignKey("ExerciseTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Exercise___Exerc__60A75C0F");
                });

            modelBuilder.Entity("ExerciseMuscleType", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.Exercise", null)
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .IsRequired()
                        .HasConstraintName("FK__Exercise___Exerc__656C112C");

                    b.HasOne("HealthBuddy.Server.Models.Domain.MuscleType", null)
                        .WithMany()
                        .HasForeignKey("MuscleTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Exercise___Muscl__66603565");
                });

            modelBuilder.Entity("FoodFoodType", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.Food", null)
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .IsRequired()
                        .HasConstraintName("FK__Food_Food__FoodI__4D94879B");

                    b.HasOne("HealthBuddy.Server.Models.Domain.FoodType", null)
                        .WithMany()
                        .HasForeignKey("FoodTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Food_Food__FoodT__4E88ABD4");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Comment", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__UserID__6A30C649");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Exercise", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "Uploader")
                        .WithMany("Exercises")
                        .HasForeignKey("UploaderId")
                        .IsRequired()
                        .HasConstraintName("FK__Exercises__Uploa__5AEE82B9");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Food", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "Uploader")
                        .WithMany("Foods")
                        .HasForeignKey("UploaderId")
                        .IsRequired()
                        .HasConstraintName("FK__Food__UploaderID__48CFD27E");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Like", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Likes__UserID__6D0D32F4");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.MealDetail", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.Food", "Food")
                        .WithMany("MealDetails")
                        .HasForeignKey("FoodId")
                        .IsRequired()
                        .HasConstraintName("FK__MealDetai__FoodI__07C12930");

                    b.HasOne("HealthBuddy.Server.Models.Domain.MealSchedule", "MealSchedule")
                        .WithMany("MealDetails")
                        .HasForeignKey("MealScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__MealDetai__MealS__06CD04F7");

                    b.Navigation("Food");

                    b.Navigation("MealSchedule");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.MealSchedule", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "Uploader")
                        .WithMany("MealSchedules")
                        .HasForeignKey("UploaderId")
                        .IsRequired()
                        .HasConstraintName("FK__MealSched__Uploa__03F0984C");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Recipe", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.Food", "Food")
                        .WithMany("Recipes")
                        .HasForeignKey("FoodId")
                        .IsRequired()
                        .HasConstraintName("FK__Recipes__FoodID__534D60F1");

                    b.HasOne("HealthBuddy.Server.Models.Domain.Ingredient", "Ingredient")
                        .WithMany("Recipes")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__Recipes__Ingredi__5441852A");

                    b.Navigation("Food");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Report", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Report__UserID__70DDC3D8");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserDetail", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "User")
                        .WithOne("UserDetail")
                        .HasForeignKey("HealthBuddy.Server.Models.Domain.UserDetail", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserDetai__UserI__3B75D760");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserMealSchedule", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.MealSchedule", "MealSchedule")
                        .WithMany("UserMealSchedules")
                        .HasForeignKey("MealScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserMealS__MealS__151B244E");

                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "User")
                        .WithMany("UserMealSchedules")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserMealS__UserI__14270015");

                    b.Navigation("MealSchedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserMealTracking", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.MealSchedule", "MealSchedule")
                        .WithMany("UserMealTrackings")
                        .HasForeignKey("MealScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserMealT__MealS__18EBB532");

                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "User")
                        .WithMany("UserMealTrackings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserMealT__UserI__17F790F9");

                    b.Navigation("MealSchedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserNotificationPreference", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "User")
                        .WithOne("UserNotificationPreference")
                        .HasForeignKey("HealthBuddy.Server.Models.Domain.UserNotificationPreference", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserNotif__UserI__4222D4EF");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserWorkoutSchedule", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "User")
                        .WithMany("UserWorkoutSchedules")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserWorko__UserI__0B91BA14");

                    b.HasOne("HealthBuddy.Server.Models.Domain.WorkoutSchedule", "WorkoutSchedule")
                        .WithMany("UserWorkoutSchedules")
                        .HasForeignKey("WorkoutScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserWorko__Worko__0C85DE4D");

                    b.Navigation("User");

                    b.Navigation("WorkoutSchedule");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.UserWorkoutTracking", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "User")
                        .WithMany("UserWorkoutTrackings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserWorko__UserI__0F624AF8");

                    b.HasOne("HealthBuddy.Server.Models.Domain.WorkoutSchedule", "WorkoutSchedule")
                        .WithMany("UserWorkoutTrackings")
                        .HasForeignKey("WorkoutScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserWorko__Worko__10566F31");

                    b.Navigation("User");

                    b.Navigation("WorkoutSchedule");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.WorkoutDetail", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.Exercise", "Exercise")
                        .WithMany("WorkoutDetails")
                        .HasForeignKey("ExerciseId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkoutDe__Exerc__7D439ABD");

                    b.HasOne("HealthBuddy.Server.Models.Domain.WorkoutSchedule", "WorkoutSchedule")
                        .WithMany("WorkoutDetails")
                        .HasForeignKey("WorkoutScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkoutDe__Worko__7C4F7684");

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutSchedule");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.WorkoutSchedule", b =>
                {
                    b.HasOne("HealthBuddy.Server.Models.Domain.User", "Uploader")
                        .WithMany("WorkoutSchedules")
                        .HasForeignKey("UploaderId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkoutSc__Uploa__797309D9");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Exercise", b =>
                {
                    b.Navigation("WorkoutDetails");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Food", b =>
                {
                    b.Navigation("MealDetails");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.Ingredient", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.MealSchedule", b =>
                {
                    b.Navigation("MealDetails");

                    b.Navigation("UserMealSchedules");

                    b.Navigation("UserMealTrackings");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Exercises");

                    b.Navigation("Foods");

                    b.Navigation("Likes");

                    b.Navigation("MealSchedules");

                    b.Navigation("Reports");

                    b.Navigation("UserDetail");

                    b.Navigation("UserMealSchedules");

                    b.Navigation("UserMealTrackings");

                    b.Navigation("UserNotificationPreference");

                    b.Navigation("UserWorkoutSchedules");

                    b.Navigation("UserWorkoutTrackings");

                    b.Navigation("WorkoutSchedules");
                });

            modelBuilder.Entity("HealthBuddy.Server.Models.Domain.WorkoutSchedule", b =>
                {
                    b.Navigation("UserWorkoutSchedules");

                    b.Navigation("UserWorkoutTrackings");

                    b.Navigation("WorkoutDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
